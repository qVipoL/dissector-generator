+ - 1 or more
* - 0 or more
? - 0 or 1
| - or

proto: protoDecl+

protoDecl: endian ";"
    | protoDetails ";"
    | dissectorEntry ";"
    | dissectorTable ";"
    | enum ";"
    | struct ";"

/*=== DISSECTOR SETTINGS ===*/

endian: "endian" "=" ("big" | "little")

protoDetails: "details" "=" "{" STRING "," STRING "," STRING "}"

dissectorEntry: "dissector" ID "=" ID

dissectorTable: "dissectorTable" "[" STRING "," STRING "]" "=" ID

/*=== ENUM ===*/

enum: "enum" ID ":" ID "{" enumBody ("," enumBody)* "}"

enumBody: NUMBER "=" ID ":" STRING (AST_ENUM_BODY_DECL)
    | "default" "=" STRING (AST_ENUM_BODY_DEFAULT)

/*=== STRUCT ===*/

struct: "struct" ID "{" (structBody ";")+ "}"

structBody: localElement (AST_STRUCT_BODY_LOCAL)
    | switch (AST_STRUCT_BODY_SWITCH)

localElement: ID (":" NUMBER)? (ID | STRING)

/*=== SWITCH ===*/

switch: "switch" "(" switchCondition ")" "{" case+ "}"

switchCondition: fieldPath
//    | fieldPath OPERATION (NUMBER | ID)

fieldPath: startsWith=("../" | "/")? field ("/" field)*

field: ID | STRING

case: ("case" caseLabel | "default") ":" caseBody ";"

caseLabel: ID | NUMBER

caseBody:
    | localElement
    | "void"

TOKEN_TYPES:
- ID (alnum)
- NUMBER (numeric)
- STRING (starts with " ends with ")
- SEPARATOR ( : ; , ( ) { } [ ] = ../ / )
- EOF (\0)